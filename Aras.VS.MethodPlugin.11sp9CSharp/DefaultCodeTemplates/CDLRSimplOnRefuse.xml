<default_code_template templateName="ConflictDetectionLocalRuleSimplifiedCSharp.version:1" eventData="OnRefuse">
 <wrapper_code><![CDATA[return $(pkgname)Execute(configuration);]]></wrapper_code>
 <simple_code>
  <source_code><![CDATA[using System;
using System.IO;
using System.Xml;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Net;
using System.Web;
using System.Web.SessionState;
using System.Globalization;
using Aras.IOM;
using Aras.IOME.ConflictDetection;

namespace $(pkgname)
{
    public partial class $(clsname)
    {
        public static IList<ConflictDetectionResult> $(pkgname)Execute(Item configuration)
        {
// start your code inside region MethodCode - DO NOT CHANGE CODE ABOVE
#region MethodCode
            return null;
#endregion MethodCode
// end your code inside region MethodCode - DO NOT CHANGE CODE BELOW
        }
    }
}]]></source_code>
  <test_code><![CDATA[using System;
using System.IO;
using Aras.IOM;
using NSubstitute;
using NUnit.Framework;

namespace $(pkgname)
{
    [TestFixture]
    public class $(pkgname)Tests
    {

    }
}]]></test_code>
 </simple_code>
</default_code_template>